apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
//apply plugin: 'com.google.protobuf'

android {

    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.globalpaysolutions.yocomprorecarga"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 75
        versionName "1.58" // Comparacion de velocidades FakeGPS, Nuevo diseño Viajar

        //OneSignal
        manifestPlaceholders = [onesignal_app_id               : "1ec1e355-543b-4e69-8651-d2d0ac579797",
                                // Project number pulled from dashboard, local value is ignored.
                                onesignal_google_project_number: "REMOTE"]

        multiDexEnabled true

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    //ProtoBuf - Specificate files
    packagingOptions {
        pickFirst 'google/protobuf/any.proto'
        pickFirst 'google/protobuf/api.proto'
        pickFirst 'google/protobuf/descriptor.proto'
        pickFirst 'google/protobuf/duration.proto'
        pickFirst 'google/protobuf/empty.proto'
        pickFirst 'google/protobuf/field_mask.proto'
        pickFirst 'google/protobuf/source_context.proto'
        pickFirst 'google/protobuf/struct.proto'
        pickFirst 'google/protobuf/timestamp.proto'
        pickFirst 'google/protobuf/type.proto'
        pickFirst 'google/protobuf/wrappers.proto'
        pickFirst 'google/protobuf/plugin.proto'
        pickFirst 'google/protobuf/compiler/plugin.proto'
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()

    google()

    maven {
        url "https://maven.google.com"
    }
    maven { url "https://github.com/adform/adform-tracking-android-sdk/raw/master/releases/" }

    mavenLocal()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:26.1.0'

    //Conflicts
    implementation 'com.android.support:animated-vector-drawable:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'

    implementation 'com.android.support:design:26.1.0'

    implementation(name: 'wikitudesdk', ext: 'aar')

    //Google Maps
    implementation 'com.google.android.gms:play-services-maps:11.8.0'

    //Google Location API
    implementation 'com.google.android.gms:play-services-location:11.8.0'

    //Google GCM
    implementation 'com.google.android.gms:play-services-gcm:11.8.0'

    //Google Maps Utilities
    implementation 'com.google.maps.android:android-maps-utils:0.5+'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.0'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //Firebase
    implementation 'com.google.firebase:firebase-database:11.8.0'

    //Firebase Auth
    implementation 'com.google.firebase:firebase-auth:11.8.0'

    //GeoFire
    implementation 'com.firebase:geofire-android:2.1.1'

    //OneSignal
    implementation 'com.onesignal:OneSignal:3.+@aar'

    //Chrome TabView
    implementation 'com.android.support:customtabs:26.1.0'

    //Facebook SDK
    implementation 'com.facebook.android:facebook-android-sdk:4.27.0'

    //CircleImageView
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    //Picasso
    //implementation 'com.squareup.picasso:picasso:2.5.2'

    //CircleIndicator
    //compile 'me.relex:circleindicator:1.2.2@aar'

    //Coordinator Layout
    //compile 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    //Calligraphy
    //compile 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    //Firebase Crash Reporting
    //compile 'com.google.firebase:firebase-crash:11.6.0'

    //Fonts
    //compile 'me.anwarshahriar:calligrapher:1.0'

    //Crashlytics

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-core:11.8.0'

    //AppsFlyer
    implementation 'com.appsflyer:af-android-sdk:4+@aar'

    //ShowcaseView
    implementation 'com.github.amlcurran.showcaseview:library:5.4.3'

    //RecyclerView
    implementation 'com.android.support:recyclerview-v7:26.1.0'

    //Install referrer
    implementation 'com.android.installreferrer:installreferrer:1.0'

    // Play Services
    implementation 'com.google.android.gms:play-services-analytics:11.8.0'

    //Play Services Ads
    implementation 'com.google.android.gms:play-services-ads:11.8.0'

    //Play Services Auth
    implementation 'com.google.android.gms:play-services-auth:11.8.0'

    //Adform SDK
    implementation 'com.adform.tracking.sdk:adform-tracking-sdk:1.1.7'

    //Adform SDK - ProtoBuf
    implementation 'com.google.protobuf:protobuf-java:3.5.1'

    // Gif
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.10'

    //Multidex
    implementation 'com.android.support:multidex:1.0.2'

    //FlurrySDK
    implementation 'com.flurry.android:analytics:11.0.0@aar'

}


// Map for the version code that gives each ABI a value.
//ext.abiCodes = ['armeabi-v7a':1, x86:2, x86_64:3]
ext.abiCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'x86': 4, 'x86_64': 5 ]


// For per-density APKs, create a similar map like this:
// ext.densityCodes = ['mdpi': 1, 'hdpi': 2, 'xhdpi': 3]

import com.android.build.OutputFile

// For each APK output variant, override versionCode with a combination of
// ext.abiCodes * 1000 + variant.versionCode. In this example, variant.versionCode
// is equal to defaultConfig.versionCode. If you configure product flavors that
// define their own versionCode, variant.versionCode uses that value instead.
android.applicationVariants.all { variant ->

    // Assigns a different version code for each output APK
    // other than the universal APK.
    variant.outputs.each { output ->

        // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
        def baseAbiVersionCode =
                // Determines the ABI for this variant and returns the mapped value.
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))

        // Because abiCodes.get() returns null for ABIs that are not mapped by ext.abiCodes,
        // the following code does not override the version code for universal APKs.
        // However, because we want universal APKs to have the lowest version code,
        // this outcome is desirable.
        if (baseAbiVersionCode != null) {

            // Assigns the new version code to versionCodeOverride, which changes the version code
            // for only the output APK, not for the variant itself. Skipping this step simply
            // causes Gradle to use the value of variant.versionCode for the APK.
            output.versionCodeOverride =
                    baseAbiVersionCode * 1000 + variant.versionCode
        }
    }
}


//Google Services
//OBLIGATORIO: ESta línea debe ir al final del documento
apply plugin: 'com.google.gms.google-services'
